// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VendingMachineMVC.Data;

#nullable disable

namespace VendingMachineMVC.Migrations
{
    [DbContext(typeof(VendingDbContext))]
    partial class VendingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VendingMachineMVC.Models.Entities.Base.GoodBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GoodBase");

                    b.HasDiscriminator().HasValue("GoodBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("VendingMachineMVC.Models.Entities.Base.SlotBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<int>("Positions")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SlotBase");

                    b.HasDiscriminator().HasValue("SlotBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("VendingMachineMVC.Models.Entities.Coin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("VendingMachineMVC.Models.Entities.Snack", b =>
                {
                    b.HasBaseType("VendingMachineMVC.Models.Entities.Base.GoodBase");

                    b.Property<Guid?>("CurrentSlotId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("ExpiryDate")
                        .HasColumnType("date");

                    b.HasIndex("CurrentSlotId");

                    b.HasDiscriminator().HasValue("Snack");
                });

            modelBuilder.Entity("VendingMachineMVC.Models.Entities.Spiral", b =>
                {
                    b.HasBaseType("VendingMachineMVC.Models.Entities.Base.SlotBase");

                    b.Property<Guid?>("CurrentGoodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasIndex("CurrentGoodId");

                    b.HasDiscriminator().HasValue("Spiral");
                });

            modelBuilder.Entity("VendingMachineMVC.Models.Entities.Snack", b =>
                {
                    b.HasOne("VendingMachineMVC.Models.Entities.Base.SlotBase", "CurrentSlot")
                        .WithMany()
                        .HasForeignKey("CurrentSlotId");

                    b.Navigation("CurrentSlot");
                });

            modelBuilder.Entity("VendingMachineMVC.Models.Entities.Spiral", b =>
                {
                    b.HasOne("VendingMachineMVC.Models.Entities.Base.GoodBase", "CurrentGood")
                        .WithMany()
                        .HasForeignKey("CurrentGoodId");

                    b.Navigation("CurrentGood");
                });
#pragma warning restore 612, 618
        }
    }
}
